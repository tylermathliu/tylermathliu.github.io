<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Tricks on LaTeX]]></title>
    <url>%2F2018%2F02%2F28%2FTricks-on-LaTeX%2F</url>
    <content type="text"><![CDATA[0. TutorialsSee the quick start tutorial of LaTeX: http://zoho.is-programmer.com/user_files/zoho/File/latexlog.pdf See the official tutorial: https://www.latex-project.org/ LaTeX, which is pronounced «Lah-tech» or «Lay-tech» (to rhyme with «blech» or «Bertolt Brecht»), is a document preparation system for high-quality typesetting. It is most often used for medium-to-large technical or scientific documents but it can be used for almost any form of publishing. LaTeX is not a word processor! Instead, LaTeX encourages authors not to worry too much about the appearance of their documents but to concentrate on getting the right content. Also this: https://www.sharelatex.com/learn/ If you are using LaTeX in Chinese, the following two websites are recommended: http://www.chinatex.org/ http://www.ctex.org/ For package instructions and templates: http://www.latexstudio.net/hulatex/package/font.htm Also we can search the template we want on: https://github.com/ About math formula, see: English: http://www.forkosh.com/mathtextutorial.html https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference Chinese: http://coderic.top/2017/06/13/Latex%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E5%9F%BA%E7%A1%80/ http://blog.sina.com.cn/s/blog_5e16f1770100fs38.html https://www.kancloud.cn/thinkphp/latex/41806 https://www.cnblogs.com/houkai/p/3399646.html Now let’s start our magic journey on LaTeX! 1. GUI symbolsOpen WinEdt and click View-&gt;TeX GUI Symbols. Ha! What a pleasant surprise! What? Can’t find what you want? Visit this site and draw with your own mouse: http://detexify.kirelabs.org/classify.html To check the symbol list, visit: http://tug.ctan.org/info/symbols/comprehensive/symbols-a4.pdf 2. Excel to LaTeXTired of typing tables in a LaTeX editor? Try this macro in Excel: http://ctan.mirrors.hoobly.com/support/excel2latex.zip 3. Markdown3.0 MarkdownMarkdown is a lightweight markup language with plain text formatting syntax. It is designed so that it can be converted to HTML and many other formats using a tool by the same name. Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor. See quick tutorials here: http://aword.net/Markdown-Syntax-CN/ https://www.jianshu.com/p/250e36bb5690 Professional version: https://daringfireball.net/projects/markdown/syntax Chinese professional version: http://wowubuntu.com/markdown/ If you want to add some CSS/HTML codes: http://www.w3school.com.cn/html/ 3.1 MathJaxIf you want to see real time effects of your LaTeX formula, what would you do? Compile it? Too much trouble! And a waste of time! The only thing you need is a Markdown editor that supports MathJax, either online: https://www.zybuluo.com/mdeditor or offline: https://www.typora.io/windows/typora-setup-x64.exe http://markdownpad.com/download/markdownpad2-setup.exe Well, why are there two softwares recommended? The secret is that they have different editing modes. Typora removes the preview window, mode switcher, syntax symbols of markdown source code, and all other unnecessary distractions. Replace them with a real live preview feature to help you concentrate the content itself. While the traditional MarkdownPad2 offers the live comparison windows of codes and previews. 3.2 TyporaI would like to recommend this tool again as it is so brilliant. You can also find tutorials and themes on its official website. And there is a powerful function in the software: Export ! You can export a Markdown file to Word (docx), PDF, HTML, Epub, png, jpg … and most importantly LaTeX! 3.3 PandocSee here for yourself: https://pandoc.org/ If you need to convert files from one markup format into another, pandoc is your swiss-army knife. One thing to remember is that Pandoc is a command-line tool on Haskell Platform. Haskell is an ancient but actually most advanced programming language. It is not like C/Python/Java etc. It is a kind of functional programming language with perfect but extremely complicated syntax. To install this platform, however, is easy enough: https://www.haskell.org/ Note that if you want a standalone tex file, you need “-s”. Here is a quick start tutorial: http://www.zale.site/articles/2016/05/Academia-Writing-Using-Markdown-and-Pandoc.html 4. BeamerBeamer is a LaTeX document class for creating slides for presentations. You can use Pandoc to transform a Markdown file to a Beamer tex file. There are also many themes for the document class “Beamer”: http://deic.uab.es/~iblanes/beamer_gallery/ 5. BibTeXBibTeX is reference management software for formatting lists of references. The BibTeX tool is typically used together with the LaTeX document preparation system. The purpose of BibTeX is to make it easy to cite sources in a consistent manner, by separating bibliographic information from the presentation of this information, similarly to the separation of content and presentation/style supported by LaTeX itself. For instructions, see here: https://www.latex-tutorial.com/tutorials/bibtex/ 6. SummaryAs usual, I don’t want to write a summary. Well, keep silence and do math!]]></content>
      <categories>
        <category>Writing</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
        <tag>writing</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Building an independent blog 2 (Hexo + Github)]]></title>
    <url>%2F2018%2F02%2F28%2FBuilding-an-independent-blog-2-Hexo-Github%2F</url>
    <content type="text"><![CDATA[AbstractThis article is about my experiences on building an independent blog using Hexo framework on Github. GitHub Pages is designed to host your personal, organization, or project pages directly from a GitHub repository. It is really convenient and appropriate for maintaining an academic or technical blog, which is precisely my case. The contents mainly include: how to install Hexo how to configure its themes how to deploy it on Github and redirect your own website how to create pages and post articles Note that most pictures in this post come from Reference. Really appreciate their help. 0. First things firstFirstly, make sure node.js and npm are fully installed on your computer and their directories are added to the system path. To check this, a simple way is to type the following commands in the cmd or shell. Otherwise, go to https://nodejs.org/en/ and install it. 12$ node -v$ npm -v Secondly, Git is needed to install Hexo. Most of Github users would be familiar with this tool. Otherwise, you might want to see the introduction and download it at https://git-scm.com/ : Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows. 1. Configure Github1.1 Create a new repositoryGithub账号注册就不说了，登陆过后点击new repository，Repository name填写自己的名称 + .github.io，例如（test.github.io，test就是你的github账号的名称）。 创建仓库截图 然后直接点Create repository就可以了。 1.2 Configuring Github SSH keys首先在桌面空白处鼠标右键选择Git Bash Here 1ssh-keygen -t rsa -C &quot;your&apos;s emaill address&quot; 引号里面的内容输入你的邮箱地址，然后回车，会提示你文件保存的路径，这时候按回车键确认然后会提示你输入密码，输入即可（输入密码是看不到的），然后会确认输入一次，就可以在刚刚的路径看到生成了两个文件，一个是id_rsa，另一个是id_rsa.pub，用notepadd++打开id_rsa.pub然后选中里面的全部内容，复制下来。 登录github，点击头像可以看到setting选项，点击进入然后可以看到左边有一个SSH and GPG keys选项点击就可以看到以下界面，点击New SSH 这里的Title随便填写，主要是为了方便管理密钥然后把刚刚拷贝的内容粘贴到Key里面去然后点击Add SSH key到此，Github上面的SSH配置就算完成了 1.3 Create a local repository and sychronize with GithubThis step is a standard operation to create a project on Github. Some of the process may be skipped according to your personal preferences. 首先是在本地的任意一个分区创建一个任意的文件夹，路径中最好不要用中文吧，反正你懂的然后进入到刚刚创建的文件夹，右键，然后点击Git Bash Here 打开Git Bash 依次输入以下命令（前面的$符号就不要复制了哈） 123$ git init$ git config --global user.name &quot;Your&apos;s name&quot;$ git config --global user.email &quot;Your&apos;s email address&quot; 其中的Your’s name替换成你的名称，Your’s email address替换成你的邮件地址即可然后再当前的文件夹下面新建一个README.md文件，然后右键用notepad++打开，随便写入一点内容，做一次简单的提交，输入以下命令其中的yourname是github账号的名称，每个人是不一样的 1234$ git add README.md$ git commit -m &quot;first commit&quot;$ git remote add origin git@github.com:yourname/yourname.github.io.git$ git push -u origin master 这时候进入到github应该就可以看到仓库下面有一个刚刚提交的README.md的文档了。 2. Install Hexo在桌面空白处右键打开Git Bash Here输入以下命令 1$ npm install -g hexo-cli 敲完回车可能没有任何提示，请一定要耐心等待安装成功后，可以输入以下命令测试以下Hexo是否安装成功 1$ hexo version 如果能看到hexo的版本号信息，就表示安装成功了 新建完成后，指定文件夹的目录如下： 1234567891011.├── .deploy #需要部署的文件├── node_modules #Hexo插件├── public #生成的静态网页文件├── scaffolds #模板├── source #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里| ├── _drafts #草稿| └── _posts #文章├── themes #主题├── _config.yml #全局配置文件└── package.json #npm 依赖等 接下来，进入到我们刚刚创建的文件夹，右键打开Git Bash Here然后依次输入以下命令: 初始化hexo 1$ hexo init npm安装package.json中的依赖包 1$ npm install 生成博客文件 1$ hexo g 启动本地博客 1$ hexo s 这时候在浏览器输入http://localhost:4000/ 就可以看到hexo已经成功生成了博客，当然这只是我们本地可以看到的 3. Deploy your blog online3.1 Deploy to Github找到我们刚刚创建的文件夹，在里面找到_config.yml文件，用notepad++打开，直接拖到最后，可以看到 12deploy: type: 改成以下，特别注意，在：的后面是有一个空格的，千万要小心，不然后出错的，其中yourname即在github上面的用户名 1234deploy: type: git repository: http://github.com/yourname/yourname.github.io.git branch: master 保存后，然后在当前文件夹打开Git Bash Here 123$ hexo clean$ hexo g$ hexo d 如果出现以下异常 1ERROR Deployer not found: git 尝试输入以下命令，然后重新执行刚刚的两条命令 1$ npm install hexo-deployer-git --save 这时候如果弹出一个对话框，输入在guthub上面的用户名和密码即可这时候我们就可以在浏览器输入http://yourname.github.io（yourname替换成github上的名称）就可以看到博客已经搭建成功了。 3.2 Using your own domainSee my last post on domain name and DNS configuration. Here we only talk about how to configure your Github to show your own domain name. One simple way is to change/add a CNAME file to your repository containing solely the domain name (no “http://“ or “https://“ ). Another way is to use Github settings of your blog project. However, there is still a minor but annoying problem. Every time you use the “hexo deploy” command, the CNAME file disappears even if you have saved it in your local directory. I believe it is a little bug. To solve this, we can install a plugin. 1$ npm install hexo-generator-cname --save1 之后在_config.yml中添加一条 12plugins:- hexo-generator-cname12 并修改 _config.yml 1234url: http://www.lovebxm.comroot: /permalink: :year/:month/:day/:title/permalink_defaults: 需要注意的是：如果是在github上建立的CNAME文件，需要先clone到本地，然后安装插件，在deploy上去即可。CNAME只允许一个域名地址。 4. Configure your Hexo blog4.1 Official help1$ hexo help 4.2 Global configuration对本地blog目录下的_config.yml进行修改配置即可。 Website 参数 描述 title 网站标题 subtitle 网站副标题 description 网站描述 author 您的名字 language 网站使用的语言 timezone 网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York,Japan, 和 UTC 。 Address 参数 描述 默认值 url 网址 root 网站根目录 permalink 文章的 永久链接 格式 :year/:month/:day/:title/ permalink_default 永久链接中各部分的默认值 Directory 参数 描述 默认值 source_dir 资源文件夹，这个文件夹用来存放内容。 source public_dir 公共文件夹，这个文件夹用于存放生成的站点文件。 public tag_dir 标签文件夹 tags archive_dir 归档文件夹 archives category_dir 分类文件夹 categories code_dir Include code 文件夹 `downloads/code i18n_dir 国际化（i18n）文件夹 :lang skip_render 跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。 Posts 参数 描述 默认值 new_post_name 新文章的文件名称 :title.md default_layout 预设布局 post auto_spacing 在中文和英文之间加入空格 false titlecase 把标题转换为 title case false external_link 在新标签中打开链接 true filename_case 把文件名称转换为 (1) 小写或 (2) 大写 0 render_drafts 显示草稿 false post_asset_folder 启动 Asset 文件夹 false relative_link 把链接改为与根目录的相对位址 false future 显示未来的文章 true highlight 代码块的设置 Tags &amp; categories 参数 描述 默认值 default_category 默认分类 uncategorized category_map 分类别名 tag_map 标签别名 Date and time formatHexo 使用 Moment.js 来解析和显示时间。 参数 描述 默认值 date_format 日期格式 MMM D YYYY time_format 时间格式 H:mm:ss Pages 参数 描述 默认值 per_page 每页显示的文章量 (0 = 关闭分页功能) 10 pagination_dir 分页目录 page Additions 参数 描述 theme 当前主题名称。值为false时禁用主题 deploy 部署部分的设置 4.3 Theme configuration-NexTFor convenience, I just copied and revised most of the contents from: https://syd192.github.io/2016/11/15/hexo-learn/ . Thanks a lot. Note that every one of the word “本站点” refers to the site mentioned above. 本站点采用的Hexo主题是Next主题，使用该主题的原因是：该博客整体布局效果个人很喜欢，而且配套的文档资料非常好，文档资料可直接参考官网链接。ps：建议下载主题的稳定版本，可以避免很多没必要的麻烦。 本文主要介绍以下内容： 使用next主题 对next的主题风格、菜单、头像和代码主题设置 添加标签、分类和关于我页面 在next主题中引入第三方服务，如评论功能，分享功能，站点内容搜索功能和数据统计分析功能。 使用Next主题 在这里Downloads Next主题代码 将下载的代码放在myBlog/next目录下 设置站点myBlog/_config.yml的theme字段值为next 生成新页面hexo g 开启服务hexo s --debug 发布代码hexo d 注：此时登录网站，发现是空白的，打开控制台，提示很多vendors目录下的文件404，解决办法是将next主题下即myBlog/themes/next/source下的vendors目录名改为lib，并修改myBlog/themes/next/_config.yml的_internal: vendors改为_internal: lib。 另外，TKL主题也是不错的 1$ git clone https://github.com/SuperKieran/TKL.git theme/TKL 主题风格设定通过修改next主题下的_config.yml的scheme字段，配置不同的风格。 1234# Schemesscheme: Muse#scheme: Mist#scheme: Pisces 添加网页背景 将背景图background.jpg放到myBlog\themes\next\source\images文件夹下 在myBlog\themes\next\source\css\_custom\custom.syl文件中添加下面代码： 123body &#123; background:url(/images/background.jpg);&#125; 注： 在上面代码中添加background-repeat: no-repeat;来避免图片浮动。 标题栏 .header-inner添加背景 将背景图header.jpg放到myBlog\themes\next\source\images文件夹下 在myBlog\themes\next\source\css\_common\components\header\header.syl文件中添加下面代码： 1234567.header &#123; background-image: url(/images/header.jpg); background-size: 100% 100%; &#125; .header-inner &#123; position: relative; &#125; 菜单设置通过修改next主题下的_config.yml的menu字段，选定显示的菜单项。 1234567menu: home: / categories: /categories about: /about archives: /archives tags: /tags #commonweal: /404.html 其中，home代表主页，categories代表分类页，about代表关于页面，archives代表归档页，commonweal代表404页面（page not found时候显示的页面）。菜单项文本修改是在对next主题下的language文件夹下的文件进行修改，若当前语言是简体中文，直接修改language/zh-Hans.yml里的对应字段即可。本站点显示主页，分类页，关于页面和归档页。 头像设置在主题下的source/images/下放置头像文件avatar.gif即可。 设置文章代码主题Next主题总共支持5种主题，默认主题是白色的normal。通过修改next主题下的_config.yml的highlight字段，来设置代码主题。本站点使用的是night主题。即令highlight为night。 添加标签页面前面通过修改next主题下的_config.yml文件中的menu选项，可以在主页面的菜单栏添加标签选项，但是此时点击标签，跳转的页面会显示page not found。添加标签页面的具体方法是： 新建页面 输入如下命令： 1$ hexo new page tags 输入命令后，在myBlog/source下会新生成一个新的文件夹tags，在该文件夹下会有一个index.md文件。 设置页面类型在上步新生成的myBlog/source/tags/index.md中添加type: &quot;tags&quot;，index.md文件内容如下： 12345---title: tagsdate: 2016-11-15 19:10:05type: &quot;tags&quot;--- 设置具体文章的tags当要为某一篇文章添加标签，只需在myBlog/source/_post目录下的具体文章的tags中添加标签即可，如： 123456---title: 基于Hexo和Github搭建博客date: 2016-11-09tags: [npm, hexo, github]categories: 搭建博客--- 添加分类页面步骤与添加标签页面类似，具体如下： 新建页面 输入如下命令： 1$ hexo new page categories 输入命令后，在myBlog/source下会新生成一个新的文件夹categories，在该文件夹下会有一个index.md文件。 设置页面类型在上步新生成的myBlog/source/categories/index.md中添加type: &quot;categories&quot;，index.md文件内容如下： 12345---title: categoriesdate: 2016-11-15 19:11:13type: &quot;categories&quot;--- 设置具体文章的categories当要为某一篇文章添加分类，只需在myBlog/source/_post目录下的具体文章的categories中添加分类即可，如： 123456---title: 基于Hexo和Github搭建博客date: 2016-11-09tags: [npm, hexo, github]categories: 搭建博客--- 添加关于我页面步骤与添加标签页面类似，具体如下： 新建页面 1$ hexo new page about 输入命令后，在myBlog/source下会新生成一个新的文件夹about，在该文件夹下会有一个index.md文件。 修改 1about/index.md 本站点index.md如下： 12345678910111213---title: aboutdate: 2016-11-15 19:08:50---## 关于我一只学习前端的小菜鸟，欢迎分享知识。From XDUQQ：847909475Email: 847909475@qq.com 效果如下： 加入评论功能Well, for comment function, I prefer Valine. Valine 是一款基于Leancloud的快速、简洁且高效的无后端评论系统。 You can simply visit that website and follow the tutorials there. 加入站点内容搜索功能本站点使用的是Local Search。加入站点内容搜索功能步骤如下： 安装hexo-generator-searchdb 1$ npm install hexo-generator-searchdb --save 注意：安装时应在站点根目录下，即myBlog目录下 添加search字段 在站点 1myBlog/_config.yml 中添加search字段，如下： 12345search: path: search.xml field: post format: html limit: 10000 效果如下： 加入数据统计与分析功能本站点使用的是百度统计。加入数据统计与分析功能步骤如下： 注册站长账号并登陆在这里注册站长账号，并填写信息，网站域名和网站首页以下图为例来填写，注册完成后并登陆。 在跳转的页面中会显示下图，复制hm.js后的id值 添加baidu_analytics字段在站点myBlog/_config.yml中添加search字段，值为上步复制的id值至此，该功能已成功加入，大约过20min后在百度统计上可以看到站点的访问情况，如下图： 默认主题是landscape，如果不太喜欢，可以访问这里获取更多的主题。本人选择主题是TKL，具体切换方法如下： 配置根目录下的_config.yml文件然后，hexo g，再hexo d，即可正常访问。注：图片url填写，图片文件夹img应放在source文件目录下，url直接写为/img/图片.png即可。 5. Write on your blog5.1 New posts 新建博客 1$ hexo new post &quot;newBlog&quot; 在根目录下source文件夹下找到对应的newBlog.md文件，按照markdown规则，编写博客。在该newBlog.md文件的头部，可以对该博客进行配置，如博客标题title，博客创建时间date，所属分类categories，标签tags然后，hexo clean，再hexo g &amp;&amp; hexo d，即可正常访问。 最后来张成果图，继续加油咯~~~~ 若要在多台电脑上写文章，参考文章在Github上面搭建Hexo博客（四）:使用不同电脑维护 中的步骤即可。 5.2 MathJax supportsTo fully support MathJax (LaTeX format) in your Hexo blog, you can simply use the following commands: 12$ npm uninstall hexo-renderer-marked --save$ npm install hexo-renderer-kramed --save The first command is used to uninstall Hexo’s default Markdown renderer, the second one, install new Markdown renderer which can support MathJax fully. After installation, you should regenerate your blog to see the changes. To see why this is needed and how it works, visit http://2wildkids.com/2016/10/06/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86Hexo%E5%92%8CMathJax%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/ for more information. 6. SummaryAs usual, I don’t want to write a summary. Referenceshttps://syd192.github.io/2016/11/09/%E6%90%AD%E5%BB%BAhexo/ https://syd192.github.io/2016/11/15/hexo-learn/ https://www.jianshu.com/p/956c44c87fb1 http://blog.csdn.net/qq80583600/article/details/72828063 http://2wildkids.com/2016/10/06/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86Hexo%E5%92%8CMathJax%E7%9A%84%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/ See alsohttps://xuanwo.org/2015/03/26/hexo-intor/ http://www.cnblogs.com/liulangmao/p/4323064.html http://col.dog/2015/11/12/hello-world/ http://aword.net/hexo+next-modify-record/ http://blog.shijinrong.cn/]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Building an independent blog (WordPress + VPS)]]></title>
    <url>%2F2018%2F02%2F27%2FBuilding-an-independent-blog-(WordPress-%2B-VPS)%2F</url>
    <content type="text"><![CDATA[1. Domain name &amp; DNS1.1 Choosing domain sellersNeed to consider: Pricing, of course Top-level domain names Whether the second-level domain you want is available Method of payment Whether you need to 实名认证/备案 and whether 实名认证/备案 is possible and convenient We list some recommended domain sellers: 万网: 目前最便宜，需要身份证照片实名认证 GoDaddy: relatively inexpensive, can use Alipay, some popular top domains including .top are not available Name.com: cannot use Alipay, only Paypal Dynadot: not so cheap I bought a domain name ending with .xyz on GoDaddy (about 80 RMB per year) and one ending with .top on Dynadot (this one, about 40 RMB per year). 1.2 Choosing DNS serversA DNS server is a computer server that contains a database of public IP addressesand their associated hostnames, and in most cases, serves to resolve, or translate, those common names to IP addresses as requested. We list some recommended servers in mainland China: DNSPod, Tencent Aliyun I chose Aliyun because also want to use a customized e-mail domain name (liutianle.top &amp; love.liutianle.top) and Aliyun provides company e-mail services for free. 1.3 Configuring DNS with VPSSee http://www.paincker.com/website-primer-4 , I just copied as below. Many thanks. 基础知识实际访问网站时，确定从哪台服务器获取网页，对于计算机来说是通过IP地址实现的。由于IP地址是数字形式，为了便于人们记忆，所以使用了域名和网址机制。 域名-&gt;IP地址：在访问网络时，网址会被发送到DNS服务器，然后由DNS服务器返回我们所要访问的服务器IP地址，从而进行访问。这是DNS的工作原理，也是之所以需要设置域名解析的原因。我们要在DNS服务器上设置域名解析，让域名指向服务器空间所在的IP地址。 IP地址-&gt;域名：一台服务器上可能有多个网站，或者是子网站，他们共用一个IP地址。这时，我们请求的数据被服务器接收到，服务器需要根据判断网址中的域名来判断返回哪个站点的数据。所以我们还要在自己的服务器空间上绑定自己的域名。即域名和服务器空间的绑定关系是双向的。 配置方法域名解析的配置分为三个部分内容： 给域名设置DNS服务器（在域名提供商网站中进行） 在DNS设置域名解析（在DNS服务提供商网站中进行） 在服务器空间设置绑定域名（在服务器空间面板中进行） 这三者没有先后关系，但是都设置好才能完成域名解析。 给域名设置DNS服务器DNS服务常见的都是可以免费使用的，提供DNS服务的如Godaddy，国内的DNSPOD等。如果你是从Godaddy购买的域名，可以直接使用Godaddy的DNS服务，也可以设置成国内的DNSPOD。 下图是Godaddy购买了域名之后登陆账号显示的信息，点击域名产品右侧的Launch即可进入设置界面。 设置界面最常用的一项就是下图中的Nameservers，默认的是Godaddy自己的DNS域名服务器网址，图中我修改成了DNSPOD的地址。 如果使用Godaddy的域名服务器，不需要修改Nameservers，直接点击进入DNS Zone File进行设置。不同的域名服务提供商的设置方法基本相同。 设置DNS服务器的域名解析下面是DNSPOD中域名解析的设置方法。 首先注册账号并登录，进入界面点击添加域名，按照说明输入你注册的域名，如paincker.com，不需要加http和www，然后点击域名进去设置。 选择添加记录，这里有几个选项。 记录类型。最常用的记录类型主要是A记录、CNAME记录，记录类型的含义见下图。 主机记录、记录值。设置由 主机记录 指向 记录值。 TTL。TTL是DNS服务器上刷新记录的时间间隔，如果需要频繁更改IP，记录时间可以短一些，否则应该设置长一点，这样一定程度上会加快访问速度。不了解的话，直接用默认值即可。 我们添加两条记录。 记录类型：A记录；主机记录：@，表示http://paincker.com；记录值：服务器空间的IP地址（空间提供商会给出这个IP地址）。 记录类型：A记录；主机记录：www，表示网址http://www.paincker.com；记录值：还是上述IP地址。 第2条记录也可以写成：CNAME类型，由www指向@。 如果不需要别的子域名、邮件等服务，DNS就已经设置好了。如图，其中有两项是NS类型记录，即域名记录。 服务器空间对域名的绑定URL解析与重定向假设域名 www.paincker.com 绑定了服务器空间，且网站根目录为空间中的/mysite/目录。 默认情况下，输入网址www.paincker.com，打开/mysite/index.html；如果没有，则打开/mysite/index.php文件（对于运行php的服务器来说）。 如果没有index.html和index.php，根据服务器的设置，可能会显示这个文件夹的文件列表。 输入网址www.paincker.com/folder，则默认打开/mysite/folder/文件夹中的相关文件，规则同上。 可以通过设置.htaccess文件改变上述规则，这里不做详细说明。 网站程序可以重定向URL，改变上述规则。 确定网站根目录绑定域名的时候，会让你选择站点根目录，然后绑定一个域名。 如果你只有一个网站，可以直接把站点根目录设置为空间根目录，并绑定域名，即paincker.com绑定到/。 如果你觉得这样不方便，有点乱，你也可以设置绑定到一个子目录，例如paincker.com绑定到/my_website/。 即使只有一个网站，也推荐使用后者。因为在空间根目录下可能还有备份等其他文件，使用前者则这些文件暴漏在网站根目录下，则通过网址可以访问，不够安全。 下图是我的网站设置。 测试域名解析是否成功设置完成后记得保存。如果你很激动的马上访问你的域名，可能会发现提示域名错误等，这是因为这些设置并没有立即刷新，需要等待几分钟直到全球的DNS服务器都进行了刷新才行。 如果你只设置了DNS，把域名指向服务器IP，没有设置空间绑定域名，这时可以用cmd的ping命令ping到服务器IP，但不能访问网页。 一开始我只买了域名还没有主机，看到CNAME可以设置域名指向另一个网址，然后就尝试设置主页指向百度，一直没成功。直到后来才知道，原来主机和域名是需要相互绑定才能访问的。 有些服务器空间会自动放置了一个默认的index.html到网站根目录，用浏览器访问网址就能显示index.html的内容。如果空间里面现在还没有内容，可以自己上传一个index.html文件到站点根目录。 Another tutorial on adding domain name to your VPSSee banwagong.com 通过SSH连接到VPS，连接后输入命令 lnmp vhost add 。创建虚拟主机的过程是一个交互式的页面，集中截图到了一起，这里就细说一下。 首先会要求你输入域名，输入好域名回车，会显示是否添加其他域名。我在这里一般是选n，不添加其他域名，然后在通过301重定向不带www的域名到带www的域名。 然后就是网站的路径，默认的是/home/wwwroot/yourdomain 。如果不打算更改的话，直接回车就好，想自定义路径的话直接输入自己想要的路径就好了。 然后就是是否允许Rewrite。这里建议选择y。lnmp自带了几种常用网站的伪静态规则，因为我们要安装的是wordpress，直接输入wordpress就可以了。 再下面一部是是否开启访问日志。搬瓦工小硬盘的套餐的话，不建议开启，毕竟硬盘资源有限。 再接下来就是创建数据库，这里如果要创建的话，会创建成一个用户名和数据库名相同的。 如果选择y的话，会要先验证MySQL的root密码。验证后会让你输入数据库名，回车后会提示你，已经创建了一个和数据库名相同的用户名。然后就是输入数据库的密码。 再回车以后就跳到最后一步，按任意键创建虚拟主机。 当出现上图最后的画面时，你的虚拟主机已经创建成功了。 当然，这里的各项配置是可以通过修改配置文件进行更正的。所以没必要太纠结。通过vi修改或者下载到本地修改都可以。虚拟主机配置文件在： 1/usr/local/nginx/conf/vhost/域名.conf 2. LNMPSee http://jwcyber.com/build-site/#21_WordPress_VPS : putty登录VPS后就可以安装网站的环境了，这里使用LNMP一键安装包，详细查看LNMP官网。 LNMP一键安装包是一个用Linux Shell编写的可以为CentOS/RadHat/Fedora、Debian/Ubuntu/Raspbian VPS(VDS)或独立主机安装LNMP(Nginx/MySQL/PHP)生产环境的Shell程序。WordPress就依靠这些环境运行。下面的步骤我直接粘贴LNMP官网的教程。 安装步骤: 2.1 Installing Screen使用putty或类似的SSH工具登陆VPS或服务器；登陆后运行：screen -S lnmp 如果提示screen: command not found 命令不存在可以执行：yum install screen 或 apt-get install screen安装，详细的screen教程。 2.2 Installing LNMP您可以选择使用下载版(推荐国外或者美国VPS使用)或者完整版(推荐国内VPS使用)，两者没什么区别，只是完整版把一些需要的源码文件预先放到安装包里。安装LNMP执行： 1wget -c http://soft.vpser.net/lnmp/lnmp1.2-full.tar.gz &amp;&amp; tar zxf lnmp1.2-full.tar.gz &amp;&amp; cd lnmp1.2-full &amp;&amp; ./install.sh lnmp 按上述命令执行后，会出现如下提示： 需要设置MySQL的root密码（不输入直接回车将会设置为root），输入后回车进入下一步，如下图所示： 这里需要确认是否启用MySQL InnoDB，如果不确定是否启用可以输入 y ，输入 y 表示启用，输入 n 表示不启用。默认为y 启用，输入后回车进入下一步，选择MySQL版本： 输入MySQL或MariaDB版本的序号，回车进入下一步，选择PHP版本： 输入PHP版本的序号，回车进入下一步，选择是否安装内存优化： 可以选择不安装、Jemalloc或TCmalloc，输入对应序号回车。 提示”Press any key to install…or Press Ctrl c to cancel”后，按回车键确认开始安装。LNMP脚本就会自动安装编译Nginx、MySQL、PHP、phpMyAdmin、Zend Optimizer这几个软件。 安装时间可能会几十分钟到几个小时不等，主要是机器的配置网速等原因会造成影响。 2.3 Finish如果显示Nginx: OK，MySQL: OK，PHP: OK 并且Nginx、MySQL、PHP都是running，80和3306端口都存在，并Install lnmp V1.2 completed! enjoy it.的话，说明已经安装成功。 安装时间比较长，我花了刚好30分钟。最后的界面可能和上面教程不同，只要出现enjoy it就行。下面是我安装完成的截图： 3. Installing WordPress on VPS通过上面的步骤已经安装好了VPS搭建网站所需的环境并创建好了主机，接下来就是上传网站文件完成网站的安装。 3.1 Uploading WordPress installation contents我们需要一款ftp软件，这里使用的是Filezilla。之前的环境搭建中，并没有安装ftp服务，所以使用sftp上传网站文件。 在Filezilla主页中点击文件→站点管理器，具体设置如下图，注意端口要填正确，协议选择sftp。登录类型选择正常就好，用户名密码填好点击连接即可。 连接之后建议先进入/home/wwwroot/default 删除其中的如下图所示选中的文件，同时修改phpmyadmin的目录名，改为不容易猜到的。 很多人问这一步的原因，根据评论中SEOIMO所说： default这个文件夹是系统默认的，里面是一些安装的信息，比如数据库和探针地址，为了安全起见，应该将里面文件改名或重建。而域名是建立在/home/wwwroot/文件夹下的，和default同层的。 除了数据库外，不用太在意default里面的内容，因为建站并不在此文件夹内。 然后进入到网站的安装目录，即上面的www.jwcyber.com文件夹，把网站的源文件上传到根目录里就可以了。当然，先得先去中文官网把wordpress的安装文件下载下来。 解压后用Filezilla直接上传WP的网站文件，由于全是小文件，这将是一个非常漫长的过程。文件上传完成后的文件结构如下图所示（WordPress的网站文件直接位于www.jwcyber.com文件夹下）： 如果觉得上传太慢，可以先将网站文件压缩成zip压缩包，上传到VPS后再解压。打包的时候直接多选文件打包成1.zip，方便解压。 压缩包上传完成后，通过SSH连接到VPS，进入网站的安装目录，命令为： 1cd /home/wwwroot/www.jwcyber.com (换成你自己的安装目录即可，注意cd后面有空格） 进入后执行命令 unzip 1.zip 回车即可。 解压后要使WordPress的网站文件直接位于www.jwcyber.com文件夹下，和上面的截图一样，否则使用Filezilla移动一下文件。出现403错误的基本都是这个问题，我一开始也犯过，评论中看到很多人也犯过这个错误。 然后等待域名的解析生效以后，就可以安装网站了。 3.2 Logging in on WordPress输入网址www.jwcyber.com，如果出现的是LNMP界面，则在VPS的管理界面里面重启一下VPS；如果是下面的WordPress的界面，证明前面的操作都没有问题，可以进行WordPress的配置了。按照下面的截图进行配置就行了。 欢迎使用WordPress！ 到这里，用VPS LNMP WordPress搭建个人网站就基本完成了。 3.3 Problems met with WordPress 1 提示需要输入FTP信息 2 301重定向jwcyber.com到www.jwcyber.com 3 WordPress只显示一个主题 4 自带编辑器不够用 5 为文章添加目录 6 网站导航菜单 7 Gravatar头像不能加载或者加载缓慢 8 使用百度统计分析网站 9 添加站点地图 10 文章内容分页 4. An overview of WordPressSee http://www.paincker.com/website-primer-6 4.1 Features of WordPressWordPress是一个被广泛使用的网站框架，主要用于博客类网站，但也被一些站点做成资讯类网站、购物网站等。 类似WordPress，也有一些其他的网站框架，比如我们用很多论坛时，就发现论坛标题末尾有一句Powered by Discuz!。Discuz!也是一个使用很多的网站框架，一般用于论坛网站。 我们可以感受到，使用了WordPress这一框架，很轻松的就搭建了一个功能完整的个人博客网站，完全不涉及任何代码。这一篇我们一起熟悉WordPress的基本应用。你会发现，WordPress用起来就和装扮QQ空间一样简答方便。 由于我们的WordPress是安装在我们租用的远程服务器上的，在对网站进行管理的时候，一切操作都通过网络发送到服务器端处理，处理完在通过网络发送到我们的电脑上，整个过程都是在浏览器中进行，和QQ空间装扮一样。通过网络传输自然有延迟，尤其是国外的服务器，并且我们的服务器流量也有限。 更好的办法是，让WordPress运行在自己的电脑上，并进行配置，配置好了，再转移到服务器上。 4.2 Installing local WordPress让本地计算机支持WordPress，需要安装PHP、MySQL等环境，但是这里已经有软件为我们全部做好了，例如USB WebServer。 下载解压运行USB WebServer（不用安装，放到U盘也能用），当Apache、MySQL环境启动后，默认情况下，软件的root子目录就成为网站 http://localhost 的根目录，当然你也可以在设置中修改。如果Apache启动不了，试试在设置里面改一下端口，我自己电脑上就是改了端口才能启动的。 把WordPress文件解压到root子目录中，浏览器访问 http://localhost 就可以打开本地的WordPress页面了。当然还需要进行数据库的配置。 如果你只是想学习WordPress相关知识而不打算实际建网站，也可以用这种方式来学习。 参考《USBWebserver：快速搭建本地PHP环境的好工具》 http://www.paincker.com/usbwebserver 4.3 ThemesWordPress里面有很多主题和插件供选择。如果有兴趣，你也可以自己做插件（当然这就要写代码了），或者修改别人的主题和插件，做的好的也可以共享到网上。当然使用别人的劳动成果时，要注意是否侵权。比如有些主题的作者会声明，主题可免费使用和修改，包括商业用途，但需要注明主题的原作者。 我们用管理员身份登录进入安装在本地或远程服务器的WordPress后台。如果你找不到登录界面，可以在域名后面加一个wp-login.php，这是默认的登录地址。 在仪表盘中，我们选择外观-主题菜单，就会打开主题界面，显示所有已经安装的主题。 打开下面的界面，就可以切换已经安装的主题了。主题更换后，整个网站的界面风格都会发生改变，就像QQ空间中的皮肤一样。 例如我安装并启用Twenty Thirteen主题，效果如下： 如果你需要安装主题，有几种方法： 通过在线的主题商城。点击添加按钮，打开在线主题商城，即可安装。 通过网页上传主题包。你在别的地方可以下载到做好的WordPress主题或者自己制作的主题，一般是zip压缩包。在主题商城的添加主题页面，点击上传主题按钮，上传压缩包即可。 还可以直接复制主题文件到WordPress中的\wp-content\themes子文件夹，注意这里需要解压后的文件，不是压缩包。 4.4 PluginsWordPress还能安装很多插件。有点像QQ空间里面的各种挂件之类的东西，但是比那些更加强大。 比如你可以安装文章浏览量统计插件WP-PostViews，然后可以查看到你的每一篇文章有多少人阅读过（当然初次建站安装这个插件后，发现自己写的东西访问量很低，相当心寒……劝你还是别安装了o(╯□╰)o）；安装WP Smush.it软件压缩网站中的图片，这样打开网页会更快，也节约了你的服务器流量消耗…… 插件的安装在插件菜单中。同样你也有三种方式来安装，在线安装，上传压缩包，和直接复制文件（插件在wp-content\plugins文件夹）。如果你有一些想要实现的功能但是不知道用什么插件，可以在网上找找。 插件安装上之后，你可以根据需要启用或禁用插件。安装太多插件可能会减慢网页访问速度，这点要注意。插件安装并启用后，一般会在设置菜单里添加一个插件的设置页面，有的插件还会在主题菜单等位置添加一些选项。 4.5 ToolsWordPress里面还有小工具，小工具通常是显示在网页侧边栏的，例如最新文章、分类目录、搜索等，具体小工具的位置是根据主题设置好的，也有的主题不支持小工具，或者是在手机访问时不支持小工具。 如果你的主题支持小工具，在外观-小工具菜单就能进行设置了。如果你安装了一些插件，例如前面说到WP-PostViews，他也会生成一个小工具供你使用。还有些主题也带有很多小工具。 4.6 Posts, categories, tags, comments &amp; users因为WordPress是博客网站的框架，自然少不了文章。你可以在文章菜单中管理、编辑、新建文章，并为文章选择分类、标签。如果你感觉WordPress自带的文章编辑器不好用，也可以安装一些插件对自带编辑器进行替换，例如CKEditor。 文章发表后，别人看到了可以发表评论。在设置菜单中，你可以设置大家是直接匿名进行评论，还是必须填写昵称和邮件进行评论，或者在你的网站注册了才能发表评论。你的账号是管理员账号，可以在后台管理网站，而新注册用户的权限你可以进行设置，默认是订阅者。你也可以禁止用户注册，或者对某些文章设置禁止评论。 WordPress还支持离线发布文章的功能。例如我一直用为知笔记编辑文章，然后很轻松就能上传图片，同时发表文章到我的网站。 参考《为知笔记离线博客发布功能》 http://www.paincker.com/wiz-blog 4.7 Pages页面的编辑和文章相似，区别是，页面通常用户编写一些很少修改的信息，比如你可以编写一个留言板页面，对自己网站进行介绍，大家可以在留言板发言（也就是评论）。而留言板是一个固定页面，不会像文章一样，随着时间推移，慢慢就排到很后面的位置了。 4.8 MenusWordPress还有菜单功能。通常大部分主题都支持菜单功能，例如显示在网页顶部的那部分就是菜单。 你可以设置首页、关于和留言板的页面在菜单上，然后把文章分类也放在菜单里。支持多级菜单，直接在页面中拖动位置就能进行设置。 4.9 MediaWordPress的媒体库相当于QQ空间相册，不过它不仅支持照片，还可以上传视频、音频、文档等，大家应该都比较熟悉，不再进行详细介绍。 WordPress后台的菜单选项基本上就是这些，如果你安装了一些主题、插件，可能会在菜单中添加一些选项，例如有的主题就有很多配置选项。不做一一介绍。 你只要花上一些时间和耐心就能像装扮QQ空间一样，设置好自己的网站。 4.10 Migration在本地设置好主题等配置后，需要上传到服务器端。WordPress的数据分两个地方保存，一个是WordPress文件夹，另一个是数据库。由于不同的插件数据保存的位置格式等可能不一样，如果直接把文件覆盖到服务器，并把本地数据库原封不动导进在线服务器的数据库，可能会出现一些问题。 后面还会讲到服务器的更换，域名的更换等，数据迁移都是必要的。网上有很多参考资料，但是实际使用时我还是遇到了一些问题，解决起来也有点麻烦，对于初学者不好理解。同时考虑到本篇主要讲基本配置，数据迁移就先不做介绍了。 所以本地数据迁移到服务器，最保险的方法是：把安装的主题和所有插件打包起来上传到服务器（也就是themes和plugins文件夹中的文件，这两个文件夹中不会用来保存配置文件）；然后在服务器端，对照本地的设置再配置一遍。 值得注意的是，如果你在本地WordPress中编辑页面和文章，数据会被保存在数据库中，需要通过数据库才能迁移。如果文中还有图片，图片的引用地址是 http://localhost ，不能直接迁移到服务器，还需要替换数据库中数据的网址字段，本篇暂不介绍。所以建议直接在服务器端进行编辑。 5. Working with WordPress5.1 Several recommended themes little-cheese OceanWP Here is the tutorial: https://www.youtube.com/watch?v=2cbvZf1jIJM&amp;t=2876s Visit Tyler’s website for templates and more: http://www.tyler.com Visit Enmanuel Website For Help: http://icreateyoursite.com/ themify-ultra Here is the tutorial: https://www.youtube.com/watch?v=5JWgv0nTOEg&amp;t=4260s 5.2 Picture bedSee here: http://maie.name/553.html 使用Wordpress的不安WordPress 的一些功能可能比较合大多数用户，但对于我来说，还是造成了不安。比如： 上传图片占用ID：上传图片会占用 post id，而碰巧我又是使用 post id 作为固定链接； 自动保存草稿和修订记录占用ID：wordpress一个很“贴心”的的功能就是自动保存文章草稿和修订记录。这些功能无法在设置中关闭，且于代码深度整合，对于我们这种不懂代码的很不易修改，而这些记录会占用很多ID。最主要是wordpress官方似乎会将自动保存和修订记录功能更深入化的迹象。 更换固定链接的代价：如果将 post id 更换为 post name 别名，则会影响搜索引擎搜录，且内部的链接好多都要重新设置。更换固定链接的代价与单纯的ID洁癖相比是否值得？！ 对于自动保存文章草稿和生成多个版本的修订记录我个人觉得是个很鸡肋的功能。先说自动保存，你要自动保存就保存到当前ID的 post 中吧，非要另开一个ID来保存；修订记录也是，你开一贴编辑，四分之一柱香不到的时间就保存了若干修订历史记录，这得占用多少资源啊，也不利于节能环保什么的。好吧，你说有人需要，那么你就加个设置选项开关啊，真是不懂！ 图片上传到WordPress好处WordPress中上传的图片不仅仅是附件，而是一种文章类型。如果使用 WordPress 上传一张图片, 数据库中会生成一条类型为 attachment 的 post 数据。因些图片的编辑修改删除都很方便，便于管理，网站能访问图片就能访问，不会受到图库的影响。 很多网友分析 wordpress 内建图库, 如果图片相关性和文字描述做得足够好, 图片很容易被搜索到, 而且图片搜索的转化率很高，所以使用 WordPress 内建图库作为文章的大图页面, 也是 WordPress SEO 中重要的一环。但使用 wordpress 的内建图库时须注意： 填写清晰, 带关键字的图片 alt 和 title； 将图片放在文章中相关性高的段落前后； 如果使用多语言, 在不同的语言版本使用不一样的图片描述 (否则搜索引擎无法定位主页面)； 避免使用超大的图片, 以影响页面加载, 图片备份和网站流量。 （via MG12） 图片上传到WordPress限制图片上传到 wordpress 也有一些不足或者说额外的限制。我现在使用的是国内美橙互联的最便宜的linux虚拟主机，每月流量15G/月，按近三个月来看，因访问量较低，每个月网站浏览大约是1.6Gb左右。我的网站图片比较多，即使处理到分辨率很小（比如最长边设置为500），平均每张图片也需要100KB吧。所以如果图片上传到 wordpress 的媒体图库，流量方面是个需要考虑的问题。（maie.name网站流量示意图） 另外一个需要考虑的问题就是上面提到的占用ID的问题。不知道wordpress是基于什么考虑，上传图片占ID这事儿太让人揪心了。 此外，Maie 还觉得 post name 很难做到唯一性，而且标题要翻译成正确的英文也不是太容易。正如叫“张三”的人多得，难道我写之前还要先去查一下有木有叫张三的么？很容易搞错，也不易区别。 使用图床的好处图床就是使用第三方的服务托管图片，在自己网站上通过HTTP外链引用这些图片。为什么使用图床？原因不外乎以下几种： 流量不足。很多人像我一样购买虚拟主机写博客，空间通常只有200MB，每个月只有 15G 到 50G 限制，不得不使用图床。 图片便于管理。一般云图床有CDN加速；有WEB或FTP方式上传管理；有些还有评论、分类、分享等完善的功能；最主要是空间和流量可以按需调整。 使用图床的好处主要就是弥补虚拟主机的不足。如果直接使用 WordPress 的 Media 功能, 那国内虚拟主机支付的费用就是个问题。如果我不用为流量操心, 还会不会使用图床？！ 试用过的云图床比较又拍云、七牛云存储、百度BCS云存储和网易云相册以上这些图床的简单对比见下表所示：（云图床超级比一比） http://www.zmonster.me/2013/12/06/image-host-service.html Well, I actually chose tencent cloud COS because it provides 50G for free. 5.3 Markdown and LaTeXThere are many Markdown plugins for WordPress. As for LaTeX, see here: https://www.codelast.com/%E5%8E%9F%E5%88%9B%E7%94%A8latex-for-wordpress%E6%8F%92%E4%BB%B6%E5%9C%A8wordpress%E4%B8%AD%E5%86%99%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/ 5.4 Setting up WordPress elsewhereWordPress can also be set up in Dreamweaver/ on a local machine. See here: https://www.youtube.com/watch?v=T_y0Gmsfqro 5.5 OthersSee here: http://www.paincker.com/website-primer-7 6. SummaryI don’t want to write a summary. Just enjoy my WordPress blog!!! Referenceshttp://www.paincker.com/website-primer-4 http://www.paincker.com/website-primer-6 http://jwcyber.com/build-site/#21_WordPress_VPS http://maie.name/553.html See alsohttp://aword.net/my-wordpress-track/ https://www.seoimo.com/wordpress-vps/#wordpress-migrate https://www.zhihu.com/question/19594033 https://www.zhihu.com/question/20463581 https://www.banwagongzw.com/17.html https://www.ludou.org/create-wordpress-themes-template-hierarchy.html http://www.shichangbu.com/article-3346-1.html http://www.paincker.com/website-primer-7]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>DNS</tag>
        <tag>WordPress</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Building a virtual private network on a VPS]]></title>
    <url>%2F2018%2F02%2F26%2FBuilding-a-virtual-private-network-on-a-VPS%2F</url>
    <content type="text"><![CDATA[0. GenesisI used to visit certain websites such as Google Scholar via a VPN platform constructed by several elder students as such sites are not accessible any more from a direct network in mainland China due to the Great Firewall of Chinese government. However, all of the network connections of that platform broke down during the Spring Festival of 2018, which led to the decision of building one of my own. Actually, the staff of that platform renewed their service in about a day after I had done the job. But I see no reason that it was a waste of time because I learned a lot from my practice. 1. Host machine1.1 Virtual hosting or virtual private server (VPS)Virtual hosting is a method for hosting multiple domain names (with separate handling of each name) on a single server) (or pool of servers). This allows one server to share its resources, such as memory and processor cycles, without requiring all services provided to use the same host name. A Virtual Private Server (VPS) is a virtual machine sold as a service by an Internet hosting service. A VPS runs its own copy of an operating system (OS), and customers may have superuser-level access to that operating system instance, so they can install almost any software that runs on that OS. For many purposes they are functionally equivalent to a dedicated physical server, and being software-defined, are able to be much more easily created and configured. As we can see from above virtual hosting can be convenient but with limited functions and less freedom. As for a VPS, we need to setup particular servers and configure them all by ourselves but we can do nearly everything we want as long as it is available for a Linux machine. Certainly, I chose VPS for my purpose of learning. 1.2 Choosing and purchasing a VPSFirst, we need to considering several aspects listed below: Whether dedicated IP addresses are provided Convenience of changing IP (really important because our IP may be banned by GFW) Quality of IP (may be GFW or some of the network servers in mainland China had already banned quite a lot of IPs of the same range) Pricing, of course most importantly Hardware configuration Location &amp; whether it can be changed Technology (KVM better than OpenVZ) Panel provided Method of payment …………….. Analyzing these aspects, we recommend following businesses: Bandwagon: cheap, speedy, high quality, pay $2.8 if you need to change IP, a lot of IP from there are banned Vultr: cheap, free to change IP, but few of them are not banned currently, hard to configure DigitalOcean: price a little higher Cyanode: not known by most people Linode: price higher For me, I chose to purchase a $4.99 per month (1G, 20G, several locations) and another $19.99 per year (512M, 10G, Los Angeles only, actually changing IP twice up to now) on Bandwagon and prepaid $25 for my Vultr accounts (a huge mistake). 2. Configuring Bandwagon VPSSee this page https://www.liaoyuqin.com/post/tools/ha-bi-da-ti-zi , I got tired of writing and copied and revised it here. 登陆搬瓦工网站，进入 Services-My Services-KiwiVM Control Panel，先去 Main controls 改一下 Hostname （如果你用 putty 的话，这个就是登陆的名字，当然你也可以用 root 这个名字） 还是 Main controls，点一下 Stop，接着去 Install new OS 这里，选择 CentOS-6-x86_64-bbr，勾选 I agree， 点击 Reload。然后逐个改密码咯~ Root password modification 这个是装系统之后，搬瓦工随机给你的，自己不能改，记录一下这里的信息（邮箱里也会收到） KiwiVM password modification 是登陆账号的密码，直接写新密码 然后 KiwiVM Extras 这里安装 ShadowsocksR Server，它自动装好之后显示的信息要记录一下，稍后在 SSR 里需要填写。没有安装好 SSR 客户端的也可以在这个页面根据提示去下载安装。 注：我这里是直接使用搬瓦工的一键安装服务，但也有人说这样不好，要自己手动装，下载一个 putty 或者 xshell 连接远程服务器去安装 SS 或 SSR，但我不是很理解这么做的原因。 3. ClientsWindows 下载地址 SS SSR-4.7.0 SSTap (我新补充的，这个确实好用) ShadowsocksR 分为 dotnet 2.0 和 4.0，实际功能无区别，只是电脑安装 .NET Framework v2.0 或 4.0 的支持库版本不同。一般 Win7 以后都默认安装了 v2.0；Win8 以后都默认安装了 2.0 和 4.0，只有 XP 系统两个都默认没有安装，需要手动安装支持库。 Android 下载地址 SS SSR-3.4.0.5 Mac 下载地址 ShadowsocksX-NG-R electron-ssr iOS 下载地址 Wingy Shadowrocket 4. Testing your connection安装 SSR 之后，编辑服务器信息，试验是否成功。 因为我一直开着 Dropbox，如果我成功翻墙，Dropbox 的图标会变成绿色对勾。在做完上述步骤后，我没有成功。所以我做了两件事： 下载 putty 并连接远程服务器（我只是成功连接，但并没有输入任何命令） 我将搬瓦工服务器里的 ShadowsocksR Server 安装了 SSR 的系统代理模式选择的是 PAC 模式，代理规则选择的是绕过局域网和大陆，至于编辑服务器的具体设置就不赘述了，这里不是难点，相关信息照着搬瓦工里的信息填写就好了。 上网测试让我非常满意，Youtube 的清晰度自动是最高的，缓冲很快，开其他国外网站也很快，国内网站打开也很迅速。比我之前用的 VPN 好得不止一星半点，满意！ Test your IP 显示的地址是 United States。 ping tools: http://ping.chinaz.com/ 5. ReflectionsJust copied again. 优先看官方文档，官方论坛，尽快补全基本知识 一些小众的问题需要单独搜索，也多开几个页面互相补充知识 很多教程受限于时间，其实后来有更好的解决办法 根据自己的需求去做决定，不要盲目跟随别人的选择 有些选择很纠结，但你做完前面所有操作之后，你可能会发现它已经不成问题了 遇到问题的时候，不要蛮干，实在做不好就先放松心情，等会继续 一定会有人遇到跟你一样的问题，搜不到解决方法的时候换一个检索词 你解决了一个问题时，不妨输出成文章，兴许能帮助到其他人 写教程的时候，不仅要写 What 和 How，也要写上 Why，还有参考资料，能帮别人省很多事 Referenceshttps://www.vpser.net/vps-howto https://www.liaoyuqin.com/post/tools/ha-bi-da-ti-zi See alsohttp://ibanwagong.com/ https://www.banwagong.com/ http://www.bandwagonhost.net/ https://mba811.gitbooks.io/web-study/content/fq/fq1.html https://www.pin-cong.com/p/304/?s=515&amp;c=16623 https://doub.io/sxsx-12/comment-page-1/ https://raw.githubusercontent.com/shell909090/slides/master/pdf/GFW.pdf]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>VPN</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F02%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
